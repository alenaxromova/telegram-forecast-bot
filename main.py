from flask import Flask, jsonify
from datetime import datetime
from openai import OpenAI
import os
import random

app = Flask(__name__)

# üîê OpenAI –∫–ª–∏–µ–Ω—Ç (–Ω–æ–≤—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å!)
client = OpenAI(api_key=os.environ.get("OPENAI_API_KEY"))

# –ë–∞–∑–æ–≤—ã–µ —Ç–µ–∫—Å—Ç—ã –ø–æ —á–∏—Å–ª–∞–º (–∫–∞–∫ –ø–æ–¥—Å–∫–∞–∑–∫–∏)
base_texts = {
    1: "–°–µ–≥–æ–¥–Ω—è —Ç—ã –ª–∏–¥–µ—Ä. –ù–µ –±–æ–π—Å—è –±—Ä–∞—Ç—å –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—É –Ω–∞ —Å–µ–±—è.",
    2: "–î–µ–Ω—å –ø–∞—Ä—Ç–Ω—ë—Ä—Å—Ç–≤–∞ –∏ –≥–∞—Ä–º–æ–Ω–∏–∏. –û–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –±–∞–ª–∞–Ω—Å –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö.",
    3: "–î–µ–Ω—å —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞ –∏ –æ–±—â–µ–Ω–∏—è. –î–µ–ª–∏—Å—å —Ä–∞–¥–æ—Å—Ç—å—é —Å –¥—Ä—É–≥–∏–º–∏.",
}

# –ö–∞—Ä—Ç–∏–Ω–∫–∏ –ø–æ —á–∏—Å–ª–∞–º
images = {
    1: ["https://via.placeholder.com/300x200.png?text=1A", "https://via.placeholder.com/300x200.png?text=1B"],
    2: ["https://via.placeholder.com/300x200.png?text=2A", "https://via.placeholder.com/300x200.png?text=2B"],
    3: ["https://via.placeholder.com/300x200.png?text=3A"],
}

# –†–∞—Å—á—ë—Ç —á–∏—Å–ª–∞ –ø–æ –¥–∞—Ç–µ
def calculate_number_by_date(date):
    total = sum(int(c) for c in date.strftime("%d%m%Y"))
    while total > 22:
        total = sum(int(c) for c in str(total))
    return total if total in base_texts else 1

@app.route("/today")
def today_forecast():
    today = datetime.today()
    number = calculate_number_by_date(today)
    base_text = base_texts.get(number, "–ù–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π –¥–µ–Ω—å.")
    image_url = random.choice(images.get(number, ["https://via.placeholder.com/300x200.png?text=Default"]))

    try:
        response = client.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": "–¢—ã –º–∞–≥–∏—á–µ—Å–∫–∏–π –ø–æ–º–æ—â–Ω–∏–∫. –†–∞—Å—à–∏—Ä—å –∏ —É–∫—Ä–∞—Å—å —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç, –Ω–µ –¥–æ–±–∞–≤–ª—è—è –Ω–æ–≤—ã—Ö —Å–º—ã—Å–ª–æ–≤."},
                {"role": "user", "content": base_text}
            ]
        )
        final_text = response.choices[0].message.content.strip()
    except Exception as e:
        final_text = f"[–û—à–∏–±–∫–∞ OpenAI] {str(e)}"

    return jsonify({
        "date": today.strftime("%Y-%m-%d"),
        "number": number,
        "text": final_text,
        "image": image_url
    })

# –ó–∞–ø—É—Å–∫ –Ω–∞ Render
if __name__ == "__main__":
    port = int(os.environ.get("PORT", 5000))
    app.run(host="0.0.0.0", port=port)
